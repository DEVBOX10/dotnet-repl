using System;

namespace dotnet_repl;

public class SillyExecutionStatusMessageGenerator : IStatusMessageGenerator
{
    private readonly Random _random = new();

    public string GetStatusMessage()
    {
        var uncountablePortion = _uncountableNouns.Length / (float)(_uncountableNouns.Length + _countableNouns.Length);
        var countable = _random.NextDouble() > uncountablePortion;
        var throwInAnAdjective = _random.NextDouble() > .9;

        var verb = _verbs[_random.Next(_verbs.Length)];
        var quantifier = countable
                             ? _countableNounQuantifiers[_random.Next(_countableNounQuantifiers.Length)]
                             : _uncountableNounQuantifiers[_random.Next(_uncountableNounQuantifiers.Length)];
        var adjective = throwInAnAdjective
                            ? _adjectives[_random.Next(_adjectives.Length)] + " "
                            : "";
        var noun = countable
                       ? _countableNouns[_random.Next(_countableNouns.Length)]
                       : _uncountableNouns[_random.Next(_uncountableNouns.Length)];

        return
            $"{verb} {quantifier} {adjective}{noun}...";
    }

    private readonly string[] _verbs =
    {
        "💀",
        "🤞",
        "🤯",
        "🦾",
        "🧠",
        "😎",
        "😱",
        "🙌",
        "Allocating",
        "Analyzing",
        "Authenticating",
        "Booting",
        "Brute forcing",
        "Bucketizing",
        "Buffering",
        "Building",
        "Caching",
        "Calculating",
        "Casting",
        "Checking",
        "Clustering",
        "Coding",
        "Collating",
        "Compiling",
        "Compressing",
        "Computing",
        "Concatenating",
        "Currying",
        "Debugging",
        "Decompiling",
        "Dereferencing",
        "Deserializing",
        "Destructuring",
        "Distributing",
        "Downloading",
        "Encrypting",
        "Enumerating",
        "Executing",
        "Extracting",
        "Forking",
        "Hashing",
        "Hoisting",
        "Inlining",
        "Interpolating",
        "Interrupting",
        "Invoking",
        "Iterating",
        "Logging",
        "Memoizing",
        "Merging",
        "Mutating",
        "Obfuscating",
        "Optimizing",
        "Parallelizing",
        "Parameterizing",
        "Parsing",
        "Precompiling",
        "Recursing",
        "Refactoring",
        "Running",
        "Serializing",
        "Shifting",
        "Short circuiting",
        "Solving",
        "Sorting",
        "Splatting",
        "Tabulating",
        "Thunking",
        "Tokenizing",
        "Training",
        "Transpiling",
        "Traversing",
        "Type-checking",
        "Uploading",
        "Verifying",
        "Virtualizing",
        "Warming up",
        "Writing",
    };

    private readonly string[] _countableNounQuantifiers =
    {
        "a bunch of",
        "a database of",
        "a few kilobytes of",
        "a few more",
        "a few",
        "a list of",
        "a number of",
        "a quantity of",
        "a sequence of",
        "a vast quantity of",
        "all kinds of",
        "all the",
        "an array of",
        "arrays of",
        "gigabytes of",
        "hard drives full of",
        "piles of",
        "several",
        "so many",
        "some",
        "terabytes of",
        "the average of all",
        "the sum of all",
        "the",
        "these",
        "those",
        "too many",
        "two or three",
    };

    private readonly string[] _countableNouns =
    {
        "💻",
        "📊",
        "🤖",
        "abstract data types",
        "abstractions",
        "algorithms",
        "APIs",
        "arrays",
        "automata",
        "benchmarks",
        "binary trees",
        "bioinformatics",
        "bits",
        "Bloom filters",
        "bottlenecks",
        "branches",
        "buffers",
        "bytes",
        "catamorphisms",
        "categories of endofunctors",
        "ciphers",
        "classes",
        "closures",
        "codes",
        "compilers",
        "computations",
        "conditionals",
        "context-free grammars",
        "control structures",
        "coroutines",
        "CPUs",
        "data structures",
        "data transformations",
        "data types",
        "deadlocks",
        "directed acyclic graphs",
        "discriminated unions",
        "doubly linked lists",
        "edge cases",
        "errors",
        "exceptions",
        "executables",
        "expressions",
        "for loops",
        "functions",
        "functors",
        "global variables",
        "handles",
        "hash functions",
        "hash tables",
        "heaps",
        "heuristics",
        "higher-kinded types",
        "identifiers",
        "immutable values",
        "JWTs",
        "implementation details",
        "infinite loops",
        "instructions",
        "integers",
        "interfaces",
        "internets",
        "interrupts",
        "invariants",
        "kernels",
        "lambdas",
        "linear regressions",
        "linked lists",
        "linkers",
        "logic errors",
        "logic gates",
        "loops",
        "matrices",
        "messages",
        "modules",
        "monads",
        "mutexes",
        "networks",
        "nodes",
        "nonces",
        "null pointers",
        "objects",
        "off-by-one errors",
        "offsets",
        "operations",
        "operators",
        "optimizations",
        "parameters",
        "permutations",
        "pixels",
        "pointers",
        "postconditions",
        "preconditions",
        "pure functions",
        "race conditions",
        "records",
        "references",
        "registers",
        "regressions",
        "regular expressions",
        "routing tables",
        "semantics",
        "semaphores",
        "side effects",
        "singletons",
        "source files",
        "stacks",
        "strings",
        "subroutines",
        "symbols",
        "syntax trees",
        "tensors",
        "teraflops",
        "ternary expressions",
        "things",
        "tokens",
        "tuples",
        "types",
        "union types",
        "variables",
        "vectors",
    };

    private readonly string[] _uncountableNounQuantifiers =
    {
        "a bit more",
        "a bit of",
        "all the",
        "an incredible amount of",
        "gigabytes of",
        "hard drives full of",
        "just a little bit more",
        "lists of",
        "lots of",
        "piles of",
        "so much",
        "some more",
        "some",
        "terabytes of",
        "the",
    };

    private readonly string[] _uncountableNouns =
    {
        "abstract syntax",
        "AI",
        "architecture",
        "ASCII",
        "bandwidth",
        "branching logic",
        "bytecode",
        "category theory",
        "cloud computing",
        "compression",
        "computer science",
        "computer vision",
        "connectivity",
        "continuous integration",
        "contravariance",
        "covariance",
        "cryptography",
        "CSS",
        "cyclomatic complexity",
        "data science",
        "data",
        "dependency injection",
        "determinism",
        "documentation",
        "duck typing",
        "dynamic programming",
        "edge computing",
        "event sourcing",
        "exploratory data analysis",
        "fault tolerance",
        "floating point arithmetic",
        "formal verification",
        "genius",
        "global state",
        "graph data",
        "HTML",
        "I/O",
        "idempotency",
        "IL",
        "inheritance",
        "integration testing",
        "IoT",
        "JSON",
        "lambda calculus",
        "latency",
        "logging",
        "logic",
        "machine learning",
        "markup",
        "memory",
        "metalanguage",
        "OOP",
        "open source software",
        "parallelism",
        "partial application",
        "pattern matching",
        "polymorphism",
        "quantum computing",
        "RAM",
        "recursion",
        "redundancy",
        "relational data",
        "run time",
        "serialization",
        "significant whitespace",
        "smart stuff",
        "software",
        "source code",
        "storage",
        "syntax",
        "tail recursion",
        "TDD",
        "telemetry",
        "type inference",
        "type theory",
        "unstructured data",
        "WebAssembly",
        "XAML",
        "XML",
        "YAML",
    };

    private readonly string[] _adjectives =
    {
        "abstract",
        "acyclic",
        "asymptotic",
        "asynchronous",
        "axiomatic",
        "blocking",
        "Cartesian",
        "concurrent",
        "deadlocked",
        "decidable",
        "deterministic",
        "dynamic",
        "exponential",
        "functional",
        "global",
        "idempotent",
        "invariant",
        "isomorphic",
        "n-dimensional",
        "nondeterministic",
        "nonlinear",
        "NP-complete",
        "parallel",
        "polynomial",
        "probabilistic",
        "procedural",
        "quantum",
        "randomized",
        "recursive",
        "relational",
        "static",
        "undecidable",
        "uncomputable",
        "virtual",
        "virtualized",
    };

    private readonly string[] _singularNouns =
    {
        "the cloud",
        "the compiler",
        "the CPU",
        "the data center",
        "the firewall",
        "the GPU",
        "the halting problem",
        "the internet",
        "the sieve of Eratosthenes",
    };
}